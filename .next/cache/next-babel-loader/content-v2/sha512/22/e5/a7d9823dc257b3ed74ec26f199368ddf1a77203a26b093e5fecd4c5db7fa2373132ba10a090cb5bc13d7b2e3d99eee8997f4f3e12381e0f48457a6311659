{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeanromain/Desktop/UDEMY/React/06nextjs--onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"http://t0.gstatic.com/licensed-image?q=tbn:ANd9GcThCMKY5sQPqlV0yd3Zcy_bcpzZ9mGm1bRPES0uLw_4QPqhr2_GwM2kGMwYikVBajPi\",\n    title: \"Premier RDV\",\n    address: \"blablabla btm bastia\",\n    description: \"bite couille\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://jeanro2b:cmdrate2012@cluster0.xcf5fdg.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // on peut donner le nom que l'on veut\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // dans find: filtre + quels champs doivent etre rendus\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      parmas: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: \"http://t0.gstatic.com/licensed-image?q=tbn:ANd9GcThCMKY5sQPqlV0yd3Zcy_bcpzZ9mGm1bRPES0uLw_4QPqhr2_GwM2kGMwYikVBajPi\",\n        title: \"Premier RDV\",\n        address: \"blablabla btm bastia\",\n        description: \"bite couille\",\n        id: meetupId\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/jeanromain/Desktop/UDEMY/React/06nextjs--onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","Fragment","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","parmas","meetupId","toString","getStaticProps","context","params","props","meetupData","image","title","address","description","id"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,qHADR;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,OAAO,EAAC,sBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CANqC,CAMe;;AAEpD,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CARqC,CAQmC;;AAExE,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACC,MAAR,CAAeJ,QAAhC;AAEA,SAAO;AACLK,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,qHAFQ;AAGVC,QAAAA,KAAK,EAAE,aAHG;AAIVC,QAAAA,OAAO,EAAE,sBAJC;AAKVC,QAAAA,WAAW,EAAE,cALH;AAMVC,QAAAA,EAAE,EAAEX;AANM;AADP;AADF,GAAP;AAYD;AAED,eAAehB,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      image=\"http://t0.gstatic.com/licensed-image?q=tbn:ANd9GcThCMKY5sQPqlV0yd3Zcy_bcpzZ9mGm1bRPES0uLw_4QPqhr2_GwM2kGMwYikVBajPi\"\n      title=\"Premier RDV\"\n      address=\"blablabla btm bastia\"\n      description=\"bite couille\"\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://jeanro2b:cmdrate2012@cluster0.xcf5fdg.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\"); // on peut donner le nom que l'on veut\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); // dans find: filtre + quels champs doivent etre rendus\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      parmas: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"http://t0.gstatic.com/licensed-image?q=tbn:ANd9GcThCMKY5sQPqlV0yd3Zcy_bcpzZ9mGm1bRPES0uLw_4QPqhr2_GwM2kGMwYikVBajPi\",\n        title: \"Premier RDV\",\n        address: \"blablabla btm bastia\",\n        description: \"bite couille\",\n        id: meetupId,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}